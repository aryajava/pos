<%- include('../partials/layoutTop') %>

  <body id="page-top">
    <!-- Page Wrapper -->
    <div id="wrapper">
      <!-- Sidebar -->
      <%- include('../partials/sidebar') %>
        <!-- End of Sidebar -->
        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">
          <!-- Main Content -->
          <div id="content">
            <!-- Topbar -->
            <%- include('../partials/topbar') %>
              <!-- End of Topbar -->
              <!-- Begin Page Content -->
              <div class="container-fluid">
                <!-- Page Heading -->
                <h1 class="h3 mb-2 text-gray-800">
                  <%= titlePage %>
                </h1>
                <div class="card shadow mb-4">
                  <div class="card-header py-3">
                    <h3 class="m-0 font-weight-bold text-primary">
                      <%= titleForm %>
                    </h3>
                  </div>
                  <%- include('../partials/alert') %>
                    <div class="card-body">
                      <div class="row form-group">
                        <div class="col-md-4 align-self-center">
                          <label for="invoice">Invoice</label>
                          <input type="text" class="form-control" id="invoice" name="invoice"
                            value="<%= saleData ? saleData.invoice : '' %>" autocomplete="off" required readonly>
                        </div>
                        <div class="col-md-4 align-self-center">
                          <label for="timePurchase">Time</label>
                          <input type="text" class="form-control" id="timePurchase" name="time"
                            value="<%= saleData ? saleData.time : '' %>" autocomplete="off" required readonly>
                        </div>
                        <div class="col-md-4 align-self-center">
                          <label for="operator">Operator</label>
                          <input type="text" class="form-control" id="operator" name="operator"
                            value="<%= saleData ? saleData.operatorname : '' %>" autocomplete="off" required readonly>
                        </div>
                      </div>
                    </div>
                    <hr>
                    <div class="card-body">
                      <div id="formAddItemPurchase">
                        <div class="row form-group">
                          <div class="col-md-4 align-self-center">
                            <label for="goodsBarcode">Goods Barcode</label>
                            <select class="form-control" name="itemcode" id="goodsBarcode" autofocus></select>
                          </div>
                          <div class="col-md-4 align-self-center">
                            <label for="goodsName">Goods Name</label>
                            <input type="text" class="form-control" id="goodsName" name="goodsName" autocomplete="off"
                              required readonly disabled>
                          </div>
                          <div class="col-md-4 align-self-center">
                            <label for="goodsStock">Stock</label>
                            <input type="text" class="form-control" id="goodsStock" name="goodsStock" autocomplete="off"
                              required readonly disabled>
                          </div>
                        </div>
                        <div class="row form-group">
                          <div class="col-md-4 align-self-center">
                            <label for="goodsSellingPrice">Selling Price</label>
                            <input type="number" class="form-control" id="goodsSellingPrice" name="goodsSellingPrice"
                              autocomplete="off" required>
                          </div>
                          <div class="col-md-4 align-self-center">
                            <label for="quantity">Qty</label>
                            <input type="number" class="form-control" id="quantity" name="quantity" autocomplete="off"
                              min="1" required>
                          </div>
                          <div class="col-md-4 align-self-center">
                            <label for="totalPrice">Total Price</label>
                            <input type="text" class="form-control" id="totalPrice" name="totalPrice" autocomplete="off"
                              min="1" required>
                          </div>
                        </div>
                        <button class="btn btn-primary btn-icon-split" id="btnAddItemPurchase">
                          <span class="icon text-white-50">
                            <i class="fas fa-plus"></i>
                          </span>
                          <span class="text">Add Item</span>
                        </button>
                      </div>
                    </div>
                    <hr>
                    <div class="table-responsive">
                      <table class="table table-bordered" id="dataTableSaleItems" width="100%"
                        aria-describedby="dataTable_info" cellspacing="0">
                        <thead class="custom-thead">
                          <tr role="row">
                            <th class="align-content-center">No.</th>
                            <th class="align-content-center">Barcode</th>
                            <th class="align-content-center">Name</th>
                            <th class="align-content-center">Qty</th>
                            <th class="align-content-center">Price</th>
                            <th class="align-content-center">Total Price</th>
                            <th class="align-content-center d-flex justify-content-center">Action</th>
                          </tr>
                        </thead>
                        <tbody>
                          <!-- DataTables will populate this section -->
                        </tbody>
                      </table>
                    </div>
                    <hr>
                    <div class="card-footer">
                      <div id="formPurchase">
                        <div class="row form-group">
                          <div class="col-md-2 align-self-center">
                            <label for="totalsum">Total Summary</label>
                          </div>
                          <div class="col-md-10 align-self-center">
                            <input type="text" class="form-control" id="totalsum" name="totalsum"
                              value="<%= saleData ? saleData.totalsum : '' %>" autocomplete="off" required readonly
                              disabled>
                          </div>
                        </div>
                        <div class="row form-group">
                          <div class="col-md-2 align-self-center">
                            <label for="pay">Pay</label>
                          </div>
                          <div class="col-md-10 align-self-center">
                            <input type="number" class="form-control" id="pay" name="pay" step="1" min="0"
                              value="<%= saleData ? saleData.pay : '' %>" autocomplete="off" required>
                          </div>
                        </div>
                        <div class="row form-group">
                          <div class="col-md-2 align-self-center">
                            <label for="change">Change</label>
                          </div>
                          <div class="col-md-10 align-self-center">
                            <input type="text" class="form-control" id="change" name="change"
                              value="<%= saleData ? saleData.change : '' %>" autocomplete="off" required readonly
                              disabled>
                          </div>
                        </div>
                        <div class="row form-group">
                          <div class="col-md-2 align-self-center">
                            <label for="customer">Customer</label>
                          </div>
                          <div class="col-md-10 align-self-center">
                            <select class="form-control" name="customer" id="customer">
                              <option value="<%= saleData ? saleData.customer : '' %>" selected>
                                <%= saleData ? saleData.customername : 'Select a customer' %>
                              </option>
                            </select>
                          </div>
                        </div>
                      </div>
                      <button class="btn btn-success btn-icon-split" id="btnFinishPurchase">
                        <span class="icon text-white-50">
                          <i class="fas fa-database"></i>
                        </span>
                        <span class="text">Finish</span>
                      </button>
                      <a href="/sales" class="btn btn-warning btn-icon-split">
                        <span class="icon text-white-50">
                          <i class="fas fa-undo"></i>
                        </span>
                        <span class="text">Back</span>
                      </a>
                    </div>
                </div>
              </div>
              <!-- /.container-fluid -->
          </div>
          <!-- End of Main Content -->
          <!-- Footer -->
          <%- include('../partials/footer') %>
            <!-- End of Footer -->
        </div>
        <!-- End of Content Wrapper -->
    </div>
    <!-- End of Page Wrapper -->
    <%- include('../partials/jsScripts') %>
      <script>
        const invoice = $("#invoice").val();
        let totalPrice = 0;
        let itemToDelete = null;

        const calculateTotalPrice = () => {
          const quantity = parseFloat($('#quantity').val()) || 0;
          const salePrice = parseFloat($('#goodsSellingPrice').val()) || 0;
          totalPrice = quantity * salePrice;
          const formattedTotalPrice = totalPrice.toLocaleString('id-ID', { style: 'currency', currency: 'IDR' });
          $('#totalPrice').val(formattedTotalPrice);
        };

        const calculateChange = () => {
          const pay = parseInt($('#pay').val()) || 0;
          let formattedTotalSum = $('#totalsum').val();
          let numericTotalSum = formattedTotalSum.replace(/[Rp.\s]/g, '');
          const totalSum = parseInt(numericTotalSum) || 0;
          const change = pay - totalSum;
          $('#change').val(new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR' }).format(change));
        };

        const formatTotalSum = () => {
          $.ajax({
            url: '/sales/api/sale/' + invoice,
            type: 'GET',
            success: function (data) {
              $('#totalsum').val(new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR' }).format(data.data.totalsum));
              $('#change').val(new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR' }).format(data.data.change));
            },
            error: function (xhr, status, error) {
              console.error(error);
            }
          });
        };

        $(document).ready(function () {
          // Initialize DataTable for purchaseItems
          $("#dataTableSaleItems").DataTable({
            responsive: true,
            layout: {
              topStart: null,
              topEnd: null,
              bottomStart: null,
              bottomEnd: null,
              bottom: null,
            },
            ordering: false,
            language: {
              emptyTable: "No data available in table",
            },
            ajax: {
              url: "/sales/api/sale/" + invoice + "/items",
              dataSrc: "data",
            },
            columns: [
              {
                data: null,
                render: function (data, type, row, meta) {
                  return meta.row + 1;
                }
              },
              { data: "itemcode" },
              { data: "itemname" },
              { data: "quantity" },
              {
                data: "sellingprice",
                render: function (data, type, row) {
                  return new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR' }).format(data);
                }
              },
              {
                data: "totalprice",
                render: function (data, type, row) {
                  return new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR' }).format(data);
                }
              },
              {
                data: "id",
                render: function (data, type, row) {
                  return `<button class="btn btn-danger btn-sm btn-delete-item" data-id="${data}" data-type="saleitem"><i class="fas fa-trash"></i></button>`;
                }
              }
            ],
            createdRow: function (row, data, dataIndex) {
              $('td', row).addClass('align-middle');
              $('td:eq(6)', row).addClass('d-flex justify-content-center');
            }
          });

          $('#goodsBarcode').select2({
            placeholder: "Select a item",
            allowClear: true,
            theme: 'bootstrap4',
            sorter: data => data.sort((a, b) => a.text.localeCompare(b.text)),
            ajax: {
              url: '/goods/api/goods',
              dataType: 'json',
              data: function (params) {
                return {
                  q: params.term
                };
              },
              processResults: function (data) {
                return {
                  results: data.data.map(function (item) {
                    return {
                      id: item.barcode,
                      text: `${item.barcode} - ${item.name}`,
                    };
                  })
                };
              },
              cache: false
            },
          }).on('select2:select', function (e) {
            const selectedBarcode = e.params.data.id;
            $.ajax({
              url: '/goods/api/goods/' + selectedBarcode,
              type: 'GET',
              success: function (data) {
                $('#goodsName').val(data.data.name);
                $('#goodsStock').val(data.data.stock);
                $('#goodsSellingPrice').val(data.data.sellingprice);
              },
              error: function (xhr, status, error) {
                console.error(error);
              }
            });
          });

          $('#customer').select2({
            placeholder: "Select a customer",
            allowClear: true,
            theme: 'bootstrap4',
            sorter: data => data.sort((a, b) => a.text.localeCompare(b.text)),
            ajax: {
              url: '/customers/api/customers',
              dataType: 'json',
              data: function (params) {
                return {
                  q: params.term
                };
              },
              processResults: function (data) {
                return {
                  results: data.data.map(function (item) {
                    return {
                      id: item.customerid,
                      text: item.name
                    };
                  })
                };
              },
              cache: false
            },
          });

          $('#quantity, #goodsSellingPrice').on('input', function () {
            calculateTotalPrice();
          }).on('change', function () {
            calculateTotalPrice();
          }).on('focus', function () {
            calculateTotalPrice();
          });

          $('<div id="notification" class="text-danger fs-6" style="padding: 0 .3rem"></div>').insertAfter('#pay');

          $('#pay').on('input', function () {
            const pay = parseInt($(this).val()) || 0;
            const totalSum = parseInt($('#totalsum').val().replace(/[Rp.\s]/g, '')) || 0;
            if (pay < totalSum) {
              $('#notification').text('The payment amount must be at least equal to the total sum.').show();
            } else {
              $('#notification').hide();
            }
            calculateChange();
          }).on('focus', function () {
            if ($(this).val() === '0.00') {
              $(this).val('');
              calculateChange();
            }
          }).on('blur', function () {
            if ($(this).val() === '') {
              $(this).val('0.00');
              calculateChange();
            }
          });

          $('#btnAddItemPurchase').on('click', function (e) {
            e.preventDefault();
            const itemcode = $('#goodsBarcode').val();
            const itemname = $('#goodsName').val();
            const quantity = $('#quantity').val();
            const totalprice = totalPrice;
            const sellingprice = $('#goodsSellingPrice').val();
            $.ajax({
              url: '/sales/api/sale/' + invoice + '/item',
              type: 'POST',
              contentType: 'application/json',
              data: JSON.stringify({ invoice, itemcode, quantity, sellingprice, totalprice }),
              success: function (response) {
                $('#dataTableSaleItems').DataTable().ajax.reload();
                $('#goodsBarcode').val(null).trigger('change');
                $('#goodsName').val('');
                $('#goodsStock').val('');
                $('#goodsSellingPrice').val('');
                $('#quantity').val('');
                $('#totalPrice').val('');
                totalPrice = 0;
                formatTotalSum();
                calculateChange();
              },
              error: function (xhr, status, error) {
                const response = xhr.responseJSON;
                if (response && response.redirect) {
                  window.location.href = response.redirect;
                } else {
                  console.error(xhr.statusText);
                }
              }
            });
          });

          $('#btnFinishPurchase').on('click', function (e) {
            e.preventDefault();
            let pay = $('#pay').val();
            pay = parseInt(pay);
            let change = $('#change').val();
            if (change.includes('Rp')) {
              change = change.replace(/[Rp.\s]/g, '');
            }
            change = parseInt(change);
            let customer = $('#customer').val();
            customer = parseInt(customer);
            if (pay < parseInt($('#totalsum').val().replace(/[Rp.\s]/g, ''))) {
              $('#notification').text('The payment amount must be at least equal to the total sum.').show();
              let blinkCount = 0;
              const blinkInterval = setInterval(() => {
                $('#notification').toggleClass('blink');
                blinkCount++;
                if (blinkCount >= 6) { // 6 toggles = 3 blinks
                  clearInterval(blinkInterval);
                  $('#notification').removeClass('blink');
                }
              }, 300);
              return;
            }
            $.ajax({
              url: '/sales/api/sale/' + invoice,
              type: 'PUT',
              contentType: 'application/json',
              data: JSON.stringify({ invoice, pay, change, customer }),
              success: function (response) {
                window.location.href = '/sales';
              },
              error: function (xhr, status, error) {
                const response = xhr.responseJSON;
                if (response && response.redirect) {
                  window.location.href = response.redirect;
                } else {
                  console.error(xhr.statusText);
                }
              }
            });
          });

          // Event listener for delete button
          $('#dataTableSaleItems').on('click', '.btn-delete-item', function () {
            const id = $(this).data('id');
            const type = $(this).data('type');
            $('#deleteModal').data('id', id).data('type', type).modal('show');
          });

          // Event listener for confirm delete button in modal
          $('#confirmDelete').on('click', function () {
            const id = $('#deleteModal').data('id');
            const type = $('#deleteModal').data('type');
            if (type === 'saleitem') {
              $.ajax({
                url: '/sales/api/sale/' + invoice + '/item/' + id,
                method: 'DELETE',
                success: function (response) {
                  $('#dataTableSaleItems').DataTable().ajax.reload();
                  $('#goodsBarcode').val(null).trigger('change');
                  $('#goodsName').val('');
                  $('#goodsStock').val('');
                  $('#goodsSellingPrice').val('');
                  $('#quantity').val('');
                  $('#totalPrice').val('');
                  $('#deleteModal').modal('hide');
                  formatTotalSum();
                  calculateChange();
                },
                error: function (error) {
                  console.error(`Error deleting ${type}:`, error);
                  $('#deleteModal').modal('hide');
                }
              });
            }
          });
          formatTotalSum();
        });
      </script>
      <%- include('../partials/layoutBottom') %>